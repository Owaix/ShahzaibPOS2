

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Lib.Entity
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class SaleManagerEntities : DbContext
{
    public SaleManagerEntities()
        : base("name=SaleManagerEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Adj_D> Adj_D { get; set; }

    public virtual DbSet<Adj_M> Adj_M { get; set; }

    public virtual DbSet<Article> Article { get; set; }

    public virtual DbSet<ArticleTypes> ArticleTypes { get; set; }

    public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }

    public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }

    public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }

    public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }

    public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }

    public virtual DbSet<Colors> Colors { get; set; }

    public virtual DbSet<Customers> Customers { get; set; }

    public virtual DbSet<EV_M> EV_M { get; set; }

    public virtual DbSet<Excptions> Excptions { get; set; }

    public virtual DbSet<GL> GL { get; set; }

    public virtual DbSet<I_Unit> I_Unit { get; set; }

    public virtual DbSet<IComp_M> IComp_M { get; set; }

    public virtual DbSet<Item_Maker> Item_Maker { get; set; }

    public virtual DbSet<Itemledger> Itemledger { get; set; }

    public virtual DbSet<Items> Items { get; set; }

    public virtual DbSet<Items_Cat> Items_Cat { get; set; }

    public virtual DbSet<IUnit> IUnit { get; set; }

    public virtual DbSet<JV_D> JV_D { get; set; }

    public virtual DbSet<JV_M> JV_M { get; set; }

    public virtual DbSet<Lab_D> Lab_D { get; set; }

    public virtual DbSet<Lab_M> Lab_M { get; set; }

    public virtual DbSet<Party_Type> Party_Type { get; set; }

    public virtual DbSet<PO_D> PO_D { get; set; }

    public virtual DbSet<Pur_D> Pur_D { get; set; }

    public virtual DbSet<Pur_M> Pur_M { get; set; }

    public virtual DbSet<PurR_D> PurR_D { get; set; }

    public virtual DbSet<PurR_M> PurR_M { get; set; }

    public virtual DbSet<PV_D> PV_D { get; set; }

    public virtual DbSet<PV_M> PV_M { get; set; }

    public virtual DbSet<RV_D> RV_D { get; set; }

    public virtual DbSet<RV_M> RV_M { get; set; }

    public virtual DbSet<Sale_Pur_D_Pur> Sale_Pur_D_Pur { get; set; }

    public virtual DbSet<Sale_Pur_D_Sale> Sale_Pur_D_Sale { get; set; }

    public virtual DbSet<Sale_Pur_M> Sale_Pur_M { get; set; }

    public virtual DbSet<Sales_D> Sales_D { get; set; }

    public virtual DbSet<Sales_M> Sales_M { get; set; }

    public virtual DbSet<Sizes> Sizes { get; set; }

    public virtual DbSet<Styles> Styles { get; set; }

    public virtual DbSet<Table> Table { get; set; }

    public virtual DbSet<tbl_city> tbl_city { get; set; }

    public virtual DbSet<tbl_Employee> tbl_Employee { get; set; }

    public virtual DbSet<tbl_KOT> tbl_KOT { get; set; }

    public virtual DbSet<tbl_Opd> tbl_Opd { get; set; }

    public virtual DbSet<tbl_OpeningCash> tbl_OpeningCash { get; set; }

    public virtual DbSet<tbl_Order> tbl_Order { get; set; }

    public virtual DbSet<tbl_OrderDetails> tbl_OrderDetails { get; set; }

    public virtual DbSet<tbl_Receipe> tbl_Receipe { get; set; }

    public virtual DbSet<tbl_Table> tbl_Table { get; set; }

    public virtual DbSet<tbl_Village> tbl_Village { get; set; }

    public virtual DbSet<tbl_Warehouse> tbl_Warehouse { get; set; }

    public virtual DbSet<tblStock> tblStock { get; set; }

    public virtual DbSet<tblWaiter> tblWaiter { get; set; }

    public virtual DbSet<Vendors> Vendors { get; set; }

    public virtual DbSet<Zone> Zone { get; set; }

    public virtual DbSet<COA_M> COA_M { get; set; }

    public virtual DbSet<EV_D> EV_D { get; set; }

    public virtual DbSet<COA_D> COA_D { get; set; }


    public virtual ObjectResult<Customer_Select_Result> Customer_Select(Nullable<int> customerID)
    {

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("customerID", customerID) :
            new ObjectParameter("customerID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_Select_Result>("Customer_Select", customerIDParameter);
    }


    public virtual ObjectResult<ExpenseVoucherCreate_Result> ExpenseVoucherCreate(Nullable<int> rID)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpenseVoucherCreate_Result>("ExpenseVoucherCreate", rIDParameter);
    }


    public virtual ObjectResult<ExpenseVoucherEdit_Result> ExpenseVoucherEdit(Nullable<int> rID)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpenseVoucherEdit_Result>("ExpenseVoucherEdit", rIDParameter);
    }


    public virtual ObjectResult<ExpenseVoucherIndex_Result> ExpenseVoucherIndex(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpenseVoucherIndex_Result>("ExpenseVoucherIndex", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<string> Gen_NewInvNo(string invType)
    {

        var invTypeParameter = invType != null ?
            new ObjectParameter("InvType", invType) :
            new ObjectParameter("InvType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Gen_NewInvNo", invTypeParameter);
    }


    public virtual ObjectResult<string> Gen_NewInvNoLab(string invType)
    {

        var invTypeParameter = invType != null ?
            new ObjectParameter("InvType", invType) :
            new ObjectParameter("InvType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Gen_NewInvNoLab", invTypeParameter);
    }


    public virtual ObjectResult<string> Gen_NewInvNoSale(string invType)
    {

        var invTypeParameter = invType != null ?
            new ObjectParameter("InvType", invType) :
            new ObjectParameter("InvType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Gen_NewInvNoSale", invTypeParameter);
    }


    public virtual ObjectResult<string> GenerateLastNo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GenerateLastNo");
    }


    public virtual ObjectResult<Nullable<int>> GetAc_Code(Nullable<int> aC_Code)
    {

        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAc_Code", aC_CodeParameter);
    }


    public virtual ObjectResult<GetAllAc_Code_Result> GetAllAc_Code()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAc_Code_Result>("GetAllAc_Code");
    }


    public virtual ObjectResult<getCAshBookByDate_Result> getCAshBookByDate(Nullable<int> acodeMin, Nullable<int> acodeMax, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var acodeMinParameter = acodeMin.HasValue ?
            new ObjectParameter("AcodeMin", acodeMin) :
            new ObjectParameter("AcodeMin", typeof(int));


        var acodeMaxParameter = acodeMax.HasValue ?
            new ObjectParameter("AcodeMax", acodeMax) :
            new ObjectParameter("AcodeMax", typeof(int));


        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCAshBookByDate_Result>("getCAshBookByDate", acodeMinParameter, acodeMaxParameter, startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<getCustomerLedgerBYDate_Result> getCustomerLedgerBYDate(Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtto, Nullable<int> acCode)
    {

        var dtfromParameter = dtfrom.HasValue ?
            new ObjectParameter("dtfrom", dtfrom) :
            new ObjectParameter("dtfrom", typeof(System.DateTime));


        var dttoParameter = dtto.HasValue ?
            new ObjectParameter("dtto", dtto) :
            new ObjectParameter("dtto", typeof(System.DateTime));


        var acCodeParameter = acCode.HasValue ?
            new ObjectParameter("acCode", acCode) :
            new ObjectParameter("acCode", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCustomerLedgerBYDate_Result>("getCustomerLedgerBYDate", dtfromParameter, dttoParameter, acCodeParameter);
    }


    public virtual ObjectResult<getcustomerLedgerSummaryByDate_Result> getcustomerLedgerSummaryByDate(Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtto, Nullable<int> acCode)
    {

        var dtfromParameter = dtfrom.HasValue ?
            new ObjectParameter("dtfrom", dtfrom) :
            new ObjectParameter("dtfrom", typeof(System.DateTime));


        var dttoParameter = dtto.HasValue ?
            new ObjectParameter("dtto", dtto) :
            new ObjectParameter("dtto", typeof(System.DateTime));


        var acCodeParameter = acCode.HasValue ?
            new ObjectParameter("acCode", acCode) :
            new ObjectParameter("acCode", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getcustomerLedgerSummaryByDate_Result>("getcustomerLedgerSummaryByDate", dtfromParameter, dttoParameter, acCodeParameter);
    }


    public virtual ObjectResult<getCustomerPreviousBalance_Result> getCustomerPreviousBalance(Nullable<System.DateTime> dtFrom, Nullable<int> acCode)
    {

        var dtFromParameter = dtFrom.HasValue ?
            new ObjectParameter("dtFrom", dtFrom) :
            new ObjectParameter("dtFrom", typeof(System.DateTime));


        var acCodeParameter = acCode.HasValue ?
            new ObjectParameter("acCode", acCode) :
            new ObjectParameter("acCode", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCustomerPreviousBalance_Result>("getCustomerPreviousBalance", dtFromParameter, acCodeParameter);
    }


    public virtual ObjectResult<GetExpiredItems_Result> GetExpiredItems(Nullable<System.DateTime> toDate, Nullable<System.DateTime> fromDate)
    {

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpiredItems_Result>("GetExpiredItems", toDateParameter, fromDateParameter);
    }


    public virtual ObjectResult<getItemAdjustment_Result> getItemAdjustment(Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtto)
    {

        var dtfromParameter = dtfrom.HasValue ?
            new ObjectParameter("dtfrom", dtfrom) :
            new ObjectParameter("dtfrom", typeof(System.DateTime));


        var dttoParameter = dtto.HasValue ?
            new ObjectParameter("dtto", dtto) :
            new ObjectParameter("dtto", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItemAdjustment_Result>("getItemAdjustment", dtfromParameter, dttoParameter);
    }


    public virtual ObjectResult<getJournalVoucherRecord_Result> getJournalVoucherRecord(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getJournalVoucherRecord_Result>("getJournalVoucherRecord", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<Nullable<int>> getMaxACodeById(Nullable<int> cac_Code)
    {

        var cac_CodeParameter = cac_Code.HasValue ?
            new ObjectParameter("cac_Code", cac_Code) :
            new ObjectParameter("cac_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getMaxACodeById", cac_CodeParameter);
    }


    public virtual ObjectResult<Nullable<int>> getMinACodeById(Nullable<int> cac_Code)
    {

        var cac_CodeParameter = cac_Code.HasValue ?
            new ObjectParameter("cac_Code", cac_Code) :
            new ObjectParameter("cac_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getMinACodeById", cac_CodeParameter);
    }


    public virtual ObjectResult<getMonthDays_Result> getMonthDays(Nullable<int> month, Nullable<int> year)
    {

        var monthParameter = month.HasValue ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(int));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMonthDays_Result>("getMonthDays", monthParameter, yearParameter);
    }


    public virtual ObjectResult<getOpdRecords_Result> getOpdRecords(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOpdRecords_Result>("getOpdRecords", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<getPaidRecordByMonth_Result> getPaidRecordByMonth(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPaidRecordByMonth_Result>("getPaidRecordByMonth", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<getProfitAndLoss_Result> getProfitAndLoss(Nullable<int> acodeMin, Nullable<int> acodeMax, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var acodeMinParameter = acodeMin.HasValue ?
            new ObjectParameter("AcodeMin", acodeMin) :
            new ObjectParameter("AcodeMin", typeof(int));


        var acodeMaxParameter = acodeMax.HasValue ?
            new ObjectParameter("AcodeMax", acodeMax) :
            new ObjectParameter("AcodeMax", typeof(int));


        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProfitAndLoss_Result>("getProfitAndLoss", acodeMinParameter, acodeMaxParameter, startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<Nullable<double>> getStockByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("getStockByID", idParameter);
    }


    public virtual ObjectResult<getVendorLedgerBYDate_Result> getVendorLedgerBYDate(Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtto, Nullable<int> acCode)
    {

        var dtfromParameter = dtfrom.HasValue ?
            new ObjectParameter("dtfrom", dtfrom) :
            new ObjectParameter("dtfrom", typeof(System.DateTime));


        var dttoParameter = dtto.HasValue ?
            new ObjectParameter("dtto", dtto) :
            new ObjectParameter("dtto", typeof(System.DateTime));


        var acCodeParameter = acCode.HasValue ?
            new ObjectParameter("acCode", acCode) :
            new ObjectParameter("acCode", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendorLedgerBYDate_Result>("getVendorLedgerBYDate", dtfromParameter, dttoParameter, acCodeParameter);
    }


    public virtual ObjectResult<getVendorPreviousBalance_Result> getVendorPreviousBalance(Nullable<System.DateTime> dtFrom, Nullable<int> acCode)
    {

        var dtFromParameter = dtFrom.HasValue ?
            new ObjectParameter("dtFrom", dtFrom) :
            new ObjectParameter("dtFrom", typeof(System.DateTime));


        var acCodeParameter = acCode.HasValue ?
            new ObjectParameter("acCode", acCode) :
            new ObjectParameter("acCode", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendorPreviousBalance_Result>("getVendorPreviousBalance", dtFromParameter, acCodeParameter);
    }


    public virtual ObjectResult<Item_select_Result> Item_select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Item_select_Result>("Item_select");
    }


    public virtual ObjectResult<Item_Summary_Result> Item_Summary(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, string item)
    {

        var reportStartDateParameter = reportStartDate.HasValue ?
            new ObjectParameter("reportStartDate", reportStartDate) :
            new ObjectParameter("reportStartDate", typeof(System.DateTime));


        var reportEndDateParameter = reportEndDate.HasValue ?
            new ObjectParameter("reportEndDate", reportEndDate) :
            new ObjectParameter("reportEndDate", typeof(System.DateTime));


        var itemParameter = item != null ?
            new ObjectParameter("Item", item) :
            new ObjectParameter("Item", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Item_Summary_Result>("Item_Summary", reportStartDateParameter, reportEndDateParameter, itemParameter);
    }


    public virtual ObjectResult<LabList_Result> LabList(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabList_Result>("LabList", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<PaymentVoucharEdit_Result> PaymentVoucharEdit(Nullable<int> rID)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentVoucharEdit_Result>("PaymentVoucharEdit", rIDParameter);
    }


    public virtual ObjectResult<PaymentVoucharIndex_Result> PaymentVoucharIndex(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentVoucharIndex_Result>("PaymentVoucharIndex", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<PurchaseEDit_Result> PurchaseEDit(Nullable<int> rid, Nullable<int> id)
    {

        var ridParameter = rid.HasValue ?
            new ObjectParameter("rid", rid) :
            new ObjectParameter("rid", typeof(int));


        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseEDit_Result>("PurchaseEDit", ridParameter, idParameter);
    }


    public virtual ObjectResult<PurchaseList_Result> PurchaseList(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseList_Result>("PurchaseList", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<RecivedVoucharEdit_Result> RecivedVoucharEdit(Nullable<int> rID)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecivedVoucharEdit_Result>("RecivedVoucharEdit", rIDParameter);
    }


    public virtual ObjectResult<RecivedVoucharIndex_Result> RecivedVoucharIndex(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecivedVoucharIndex_Result>("RecivedVoucharIndex", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<Report_BookingDetailSummary_Result> Report_BookingDetailSummary(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, string userName, string type)
    {

        var reportStartDateParameter = reportStartDate.HasValue ?
            new ObjectParameter("reportStartDate", reportStartDate) :
            new ObjectParameter("reportStartDate", typeof(System.DateTime));


        var reportEndDateParameter = reportEndDate.HasValue ?
            new ObjectParameter("reportEndDate", reportEndDate) :
            new ObjectParameter("reportEndDate", typeof(System.DateTime));


        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_BookingDetailSummary_Result>("Report_BookingDetailSummary", reportStartDateParameter, reportEndDateParameter, userNameParameter, typeParameter);
    }


    public virtual ObjectResult<Report_BookingSummary_Result> Report_BookingSummary(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, string userName, string type)
    {

        var reportStartDateParameter = reportStartDate.HasValue ?
            new ObjectParameter("reportStartDate", reportStartDate) :
            new ObjectParameter("reportStartDate", typeof(System.DateTime));


        var reportEndDateParameter = reportEndDate.HasValue ?
            new ObjectParameter("reportEndDate", reportEndDate) :
            new ObjectParameter("reportEndDate", typeof(System.DateTime));


        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));


        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_BookingSummary_Result>("Report_BookingSummary", reportStartDateParameter, reportEndDateParameter, userNameParameter, typeParameter);
    }


    public virtual int Report_BookingSummary_Summary(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, string userName)
    {

        var reportStartDateParameter = reportStartDate.HasValue ?
            new ObjectParameter("reportStartDate", reportStartDate) :
            new ObjectParameter("reportStartDate", typeof(System.DateTime));


        var reportEndDateParameter = reportEndDate.HasValue ?
            new ObjectParameter("reportEndDate", reportEndDate) :
            new ObjectParameter("reportEndDate", typeof(System.DateTime));


        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report_BookingSummary_Summary", reportStartDateParameter, reportEndDateParameter, userNameParameter);
    }


    public virtual int Report_CategoryandLabWiseTest(Nullable<System.DateTime> reportStartDate, Nullable<System.DateTime> reportEndDate, string userName)
    {

        var reportStartDateParameter = reportStartDate.HasValue ?
            new ObjectParameter("reportStartDate", reportStartDate) :
            new ObjectParameter("reportStartDate", typeof(System.DateTime));


        var reportEndDateParameter = reportEndDate.HasValue ?
            new ObjectParameter("reportEndDate", reportEndDate) :
            new ObjectParameter("reportEndDate", typeof(System.DateTime));


        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Report_CategoryandLabWiseTest", reportStartDateParameter, reportEndDateParameter, userNameParameter);
    }


    public virtual ObjectResult<SaleList_Result> SaleList(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
    {

        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleList_Result>("SaleList", startDateParameter, endDateParameter);
    }


    public virtual ObjectResult<SalePurchaseDetails_Result> SalePurchaseDetails(Nullable<int> rid)
    {

        var ridParameter = rid.HasValue ?
            new ObjectParameter("rid", rid) :
            new ObjectParameter("rid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalePurchaseDetails_Result>("SalePurchaseDetails", ridParameter);
    }


    public virtual ObjectResult<SalePurchaseIndex_Result> SalePurchaseIndex(Nullable<System.DateTime> dtfrom, Nullable<System.DateTime> dtto, Nullable<int> pageNumber, Nullable<int> pageSize)
    {

        var dtfromParameter = dtfrom.HasValue ?
            new ObjectParameter("dtfrom", dtfrom) :
            new ObjectParameter("dtfrom", typeof(System.DateTime));


        var dttoParameter = dtto.HasValue ?
            new ObjectParameter("dtto", dtto) :
            new ObjectParameter("dtto", typeof(System.DateTime));


        var pageNumberParameter = pageNumber.HasValue ?
            new ObjectParameter("pageNumber", pageNumber) :
            new ObjectParameter("pageNumber", typeof(int));


        var pageSizeParameter = pageSize.HasValue ?
            new ObjectParameter("pageSize", pageSize) :
            new ObjectParameter("pageSize", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalePurchaseIndex_Result>("SalePurchaseIndex", dtfromParameter, dttoParameter, pageNumberParameter, pageSizeParameter);
    }


    public virtual int sp_AcCode_Insert(Nullable<int> cAC_Code, Nullable<int> pType_ID, Nullable<int> zID, Nullable<int> aC_Code, string aC_Title, Nullable<double> dR, Nullable<double> cR, Nullable<int> qty, Nullable<bool> inActive)
    {

        var cAC_CodeParameter = cAC_Code.HasValue ?
            new ObjectParameter("CAC_Code", cAC_Code) :
            new ObjectParameter("CAC_Code", typeof(int));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_TitleParameter = aC_Title != null ?
            new ObjectParameter("AC_Title", aC_Title) :
            new ObjectParameter("AC_Title", typeof(string));


        var dRParameter = dR.HasValue ?
            new ObjectParameter("DR", dR) :
            new ObjectParameter("DR", typeof(double));


        var cRParameter = cR.HasValue ?
            new ObjectParameter("CR", cR) :
            new ObjectParameter("CR", typeof(double));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(int));


        var inActiveParameter = inActive.HasValue ?
            new ObjectParameter("InActive", inActive) :
            new ObjectParameter("InActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AcCode_Insert", cAC_CodeParameter, pType_IDParameter, zIDParameter, aC_CodeParameter, aC_TitleParameter, dRParameter, cRParameter, qtyParameter, inActiveParameter);
    }


    public virtual int sp_catergories_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_catergories_Delete", idParameter);
    }


    public virtual int sp_catergories_Insert(string name)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_catergories_Insert", nameParameter);
    }


    public virtual ObjectResult<sp_catergories_Select_Result> sp_catergories_Select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_catergories_Select_Result>("sp_catergories_Select");
    }


    public virtual ObjectResult<sp_catergories_SelectByID_Result> sp_catergories_SelectByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_catergories_SelectByID_Result>("sp_catergories_SelectByID", idParameter);
    }


    public virtual int sp_catergories_update(Nullable<int> id, string name)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_catergories_update", idParameter, nameParameter);
    }


    public virtual int sp_city_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_city_Delete", idParameter);
    }


    public virtual int sp_City_insert(string name)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_City_insert", nameParameter);
    }


    public virtual ObjectResult<sp_City_Select_Result> sp_City_Select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_City_Select_Result>("sp_City_Select");
    }


    public virtual ObjectResult<sp_city_selectByID_Result> sp_city_selectByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_city_selectByID_Result>("sp_city_selectByID", idParameter);
    }


    public virtual int sp_City_update(string name, Nullable<int> id)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_City_update", nameParameter, idParameter);
    }


    public virtual int sp_COA_D_Delete(Nullable<int> aC)
    {

        var aCParameter = aC.HasValue ?
            new ObjectParameter("AC", aC) :
            new ObjectParameter("AC", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_COA_D_Delete", aCParameter);
    }


    public virtual ObjectResult<sp_coa_d_selectByAcCode_Result> sp_coa_d_selectByAcCode(Nullable<int> code)
    {

        var codeParameter = code.HasValue ?
            new ObjectParameter("code", code) :
            new ObjectParameter("code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_coa_d_selectByAcCode_Result>("sp_coa_d_selectByAcCode", codeParameter);
    }


    public virtual ObjectResult<sp_COA_D_SelectByCode_Result> sp_COA_D_SelectByCode(Nullable<int> cAC_Code)
    {

        var cAC_CodeParameter = cAC_Code.HasValue ?
            new ObjectParameter("CAC_Code", cAC_Code) :
            new ObjectParameter("CAC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_COA_D_SelectByCode_Result>("sp_COA_D_SelectByCode", cAC_CodeParameter);
    }


    public virtual int sp_COA_D_Update(Nullable<int> aC_Code, Nullable<int> pType_ID, Nullable<int> zID, string aC_Title, Nullable<double> dR, Nullable<double> cR, Nullable<int> qty, Nullable<bool> inActive)
    {

        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var aC_TitleParameter = aC_Title != null ?
            new ObjectParameter("AC_Title", aC_Title) :
            new ObjectParameter("AC_Title", typeof(string));


        var dRParameter = dR.HasValue ?
            new ObjectParameter("DR", dR) :
            new ObjectParameter("DR", typeof(double));


        var cRParameter = cR.HasValue ?
            new ObjectParameter("CR", cR) :
            new ObjectParameter("CR", typeof(double));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(int));


        var inActiveParameter = inActive.HasValue ?
            new ObjectParameter("InActive", inActive) :
            new ObjectParameter("InActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_COA_D_Update", aC_CodeParameter, pType_IDParameter, zIDParameter, aC_TitleParameter, dRParameter, cRParameter, qtyParameter, inActiveParameter);
    }


    public virtual ObjectResult<sp_COA_M_Select_Result> sp_COA_M_Select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_COA_M_Select_Result>("sp_COA_M_Select");
    }


    public virtual int sp_company_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_company_Delete", idParameter);
    }


    public virtual int Sp_company_Insert(string comp, string cShort, string address, string tel, string eml)
    {

        var compParameter = comp != null ?
            new ObjectParameter("Comp", comp) :
            new ObjectParameter("Comp", typeof(string));


        var cShortParameter = cShort != null ?
            new ObjectParameter("CShort", cShort) :
            new ObjectParameter("CShort", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var emlParameter = eml != null ?
            new ObjectParameter("Eml", eml) :
            new ObjectParameter("Eml", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_company_Insert", compParameter, cShortParameter, addressParameter, telParameter, emlParameter);
    }


    public virtual ObjectResult<Sp_company_Select_Result> Sp_company_Select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_company_Select_Result>("Sp_company_Select");
    }


    public virtual ObjectResult<Sp_company_SelectByID_Result> Sp_company_SelectByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_company_SelectByID_Result>("Sp_company_SelectByID", idParameter);
    }


    public virtual int Sp_company_Update(string comp, string cShort, string address, string tel, string eml, Nullable<int> id)
    {

        var compParameter = comp != null ?
            new ObjectParameter("Comp", comp) :
            new ObjectParameter("Comp", typeof(string));


        var cShortParameter = cShort != null ?
            new ObjectParameter("CShort", cShort) :
            new ObjectParameter("CShort", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var emlParameter = eml != null ?
            new ObjectParameter("Eml", eml) :
            new ObjectParameter("Eml", typeof(string));


        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_company_Update", compParameter, cShortParameter, addressParameter, telParameter, emlParameter, idParameter);
    }


    public virtual ObjectResult<Sp_Crud_Catergories_Result> Sp_Crud_Catergories(string opertion, Nullable<int> id, string name, Nullable<bool> isDeleted)
    {

        var opertionParameter = opertion != null ?
            new ObjectParameter("Opertion", opertion) :
            new ObjectParameter("Opertion", typeof(string));


        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var isDeletedParameter = isDeleted.HasValue ?
            new ObjectParameter("isDeleted", isDeleted) :
            new ObjectParameter("isDeleted", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Crud_Catergories_Result>("Sp_Crud_Catergories", opertionParameter, idParameter, nameParameter, isDeletedParameter);
    }


    public virtual int sp_customer_COA_D_Update(string name, Nullable<int> aC_Code)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_customer_COA_D_Update", nameParameter, aC_CodeParameter);
    }


    public virtual int sp_Customer_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Delete", idParameter);
    }


    public virtual int sp_customer_Gl_insert(Nullable<int> rID, Nullable<int> rID2, Nullable<int> typeCode, Nullable<System.DateTime> gLDate, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var rID2Parameter = rID2.HasValue ?
            new ObjectParameter("RID2", rID2) :
            new ObjectParameter("RID2", typeof(int));


        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var gLDateParameter = gLDate.HasValue ?
            new ObjectParameter("GLDate", gLDate) :
            new ObjectParameter("GLDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_customer_Gl_insert", rIDParameter, rID2Parameter, typeCodeParameter, gLDateParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter);
    }


    public virtual int sp_customer_Gl_Update(Nullable<double> debit, Nullable<double> credit, Nullable<int> aC_Code)
    {

        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_customer_Gl_Update", debitParameter, creditParameter, aC_CodeParameter);
    }


    public virtual int sp_customer_Gl_Update_Capital(Nullable<double> debit, Nullable<double> credit, Nullable<int> aC_Code)
    {

        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_customer_Gl_Update_Capital", debitParameter, creditParameter, aC_CodeParameter);
    }


    public virtual int sp_Customer_insert(Nullable<int> aC_Code, string cusName, Nullable<int> pType_ID, string add, string nTN_No, string contactPerson, string owner_Name, string cell, string eml, string tel, Nullable<int> sID, Nullable<int> zID, string addPer, Nullable<double> debit, Nullable<double> credit, Nullable<bool> black_List, string war_Cls, string war_DT, string prn, Nullable<bool> inActive, string land, Nullable<int> city, Nullable<int> village)
    {

        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var cusNameParameter = cusName != null ?
            new ObjectParameter("CusName", cusName) :
            new ObjectParameter("CusName", typeof(string));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var addParameter = add != null ?
            new ObjectParameter("Add", add) :
            new ObjectParameter("Add", typeof(string));


        var nTN_NoParameter = nTN_No != null ?
            new ObjectParameter("NTN_No", nTN_No) :
            new ObjectParameter("NTN_No", typeof(string));


        var contactPersonParameter = contactPerson != null ?
            new ObjectParameter("ContactPerson", contactPerson) :
            new ObjectParameter("ContactPerson", typeof(string));


        var owner_NameParameter = owner_Name != null ?
            new ObjectParameter("Owner_Name", owner_Name) :
            new ObjectParameter("Owner_Name", typeof(string));


        var cellParameter = cell != null ?
            new ObjectParameter("Cell", cell) :
            new ObjectParameter("Cell", typeof(string));


        var emlParameter = eml != null ?
            new ObjectParameter("Eml", eml) :
            new ObjectParameter("Eml", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var sIDParameter = sID.HasValue ?
            new ObjectParameter("SID", sID) :
            new ObjectParameter("SID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var addPerParameter = addPer != null ?
            new ObjectParameter("AddPer", addPer) :
            new ObjectParameter("AddPer", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var black_ListParameter = black_List.HasValue ?
            new ObjectParameter("Black_List", black_List) :
            new ObjectParameter("Black_List", typeof(bool));


        var war_ClsParameter = war_Cls != null ?
            new ObjectParameter("War_Cls", war_Cls) :
            new ObjectParameter("War_Cls", typeof(string));


        var war_DTParameter = war_DT != null ?
            new ObjectParameter("War_DT", war_DT) :
            new ObjectParameter("War_DT", typeof(string));


        var prnParameter = prn != null ?
            new ObjectParameter("Prn", prn) :
            new ObjectParameter("Prn", typeof(string));


        var inActiveParameter = inActive.HasValue ?
            new ObjectParameter("InActive", inActive) :
            new ObjectParameter("InActive", typeof(bool));


        var landParameter = land != null ?
            new ObjectParameter("Land", land) :
            new ObjectParameter("Land", typeof(string));


        var cityParameter = city.HasValue ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(int));


        var villageParameter = village.HasValue ?
            new ObjectParameter("Village", village) :
            new ObjectParameter("Village", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_insert", aC_CodeParameter, cusNameParameter, pType_IDParameter, addParameter, nTN_NoParameter, contactPersonParameter, owner_NameParameter, cellParameter, emlParameter, telParameter, sIDParameter, zIDParameter, addPerParameter, debitParameter, creditParameter, black_ListParameter, war_ClsParameter, war_DTParameter, prnParameter, inActiveParameter, landParameter, cityParameter, villageParameter);
    }


    public virtual ObjectResult<sp_customer_selectById_Result> sp_customer_selectById(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_customer_selectById_Result>("sp_customer_selectById", idParameter);
    }


    public virtual int sp_Customer_Update(Nullable<int> aC_Code, string cusName, Nullable<int> pType_ID, string add, string nTN_No, string contactPerson, string owner_Name, string cell, string eml, string tel, Nullable<int> sID, Nullable<int> zID, string addPer, Nullable<double> debit, Nullable<double> credit, Nullable<bool> black_List, string war_Cls, string war_DT, string prn, Nullable<bool> inActive, string land, Nullable<int> city, Nullable<int> village)
    {

        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var cusNameParameter = cusName != null ?
            new ObjectParameter("CusName", cusName) :
            new ObjectParameter("CusName", typeof(string));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var addParameter = add != null ?
            new ObjectParameter("Add", add) :
            new ObjectParameter("Add", typeof(string));


        var nTN_NoParameter = nTN_No != null ?
            new ObjectParameter("NTN_No", nTN_No) :
            new ObjectParameter("NTN_No", typeof(string));


        var contactPersonParameter = contactPerson != null ?
            new ObjectParameter("ContactPerson", contactPerson) :
            new ObjectParameter("ContactPerson", typeof(string));


        var owner_NameParameter = owner_Name != null ?
            new ObjectParameter("Owner_Name", owner_Name) :
            new ObjectParameter("Owner_Name", typeof(string));


        var cellParameter = cell != null ?
            new ObjectParameter("Cell", cell) :
            new ObjectParameter("Cell", typeof(string));


        var emlParameter = eml != null ?
            new ObjectParameter("Eml", eml) :
            new ObjectParameter("Eml", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var sIDParameter = sID.HasValue ?
            new ObjectParameter("SID", sID) :
            new ObjectParameter("SID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var addPerParameter = addPer != null ?
            new ObjectParameter("AddPer", addPer) :
            new ObjectParameter("AddPer", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var black_ListParameter = black_List.HasValue ?
            new ObjectParameter("Black_List", black_List) :
            new ObjectParameter("Black_List", typeof(bool));


        var war_ClsParameter = war_Cls != null ?
            new ObjectParameter("War_Cls", war_Cls) :
            new ObjectParameter("War_Cls", typeof(string));


        var war_DTParameter = war_DT != null ?
            new ObjectParameter("War_DT", war_DT) :
            new ObjectParameter("War_DT", typeof(string));


        var prnParameter = prn != null ?
            new ObjectParameter("Prn", prn) :
            new ObjectParameter("Prn", typeof(string));


        var inActiveParameter = inActive.HasValue ?
            new ObjectParameter("InActive", inActive) :
            new ObjectParameter("InActive", typeof(bool));


        var landParameter = land != null ?
            new ObjectParameter("Land", land) :
            new ObjectParameter("Land", typeof(string));


        var cityParameter = city.HasValue ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(int));


        var villageParameter = village.HasValue ?
            new ObjectParameter("Village", village) :
            new ObjectParameter("Village", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Update", aC_CodeParameter, cusNameParameter, pType_IDParameter, addParameter, nTN_NoParameter, contactPersonParameter, owner_NameParameter, cellParameter, emlParameter, telParameter, sIDParameter, zIDParameter, addPerParameter, debitParameter, creditParameter, black_ListParameter, war_ClsParameter, war_DTParameter, prnParameter, inActiveParameter, landParameter, cityParameter, villageParameter);
    }


    public virtual ObjectResult<sp_getArticle_Result> sp_getArticle(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("companyID", companyID) :
            new ObjectParameter("companyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getArticle_Result>("sp_getArticle", companyIDParameter);
    }


    public virtual int sp_Item_COA_D_Cost_of_Sale_Insert(Nullable<int> cAC_Code, Nullable<int> pType_ID, Nullable<int> zID, Nullable<int> aC_Code, string aC_Title, Nullable<double> dR, Nullable<double> cR, Nullable<double> qty)
    {

        var cAC_CodeParameter = cAC_Code.HasValue ?
            new ObjectParameter("CAC_Code", cAC_Code) :
            new ObjectParameter("CAC_Code", typeof(int));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_TitleParameter = aC_Title != null ?
            new ObjectParameter("AC_Title", aC_Title) :
            new ObjectParameter("AC_Title", typeof(string));


        var dRParameter = dR.HasValue ?
            new ObjectParameter("DR", dR) :
            new ObjectParameter("DR", typeof(double));


        var cRParameter = cR.HasValue ?
            new ObjectParameter("CR", cR) :
            new ObjectParameter("CR", typeof(double));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_COA_D_Cost_of_Sale_Insert", cAC_CodeParameter, pType_IDParameter, zIDParameter, aC_CodeParameter, aC_TitleParameter, dRParameter, cRParameter, qtyParameter);
    }


    public virtual int sp_Item_COA_D_Cost_of_Sale_Update(Nullable<int> costOfSale, string name)
    {

        var costOfSaleParameter = costOfSale.HasValue ?
            new ObjectParameter("CostOfSale", costOfSale) :
            new ObjectParameter("CostOfSale", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_COA_D_Cost_of_Sale_Update", costOfSaleParameter, nameParameter);
    }


    public virtual int sp_Item_COA_D_Incomecode_Insert(Nullable<int> cAC_Code, Nullable<int> pType_ID, Nullable<int> zID, Nullable<int> aC_Code, string aC_Title, Nullable<double> dR, Nullable<double> cR, Nullable<double> qty)
    {

        var cAC_CodeParameter = cAC_Code.HasValue ?
            new ObjectParameter("CAC_Code", cAC_Code) :
            new ObjectParameter("CAC_Code", typeof(int));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_TitleParameter = aC_Title != null ?
            new ObjectParameter("AC_Title", aC_Title) :
            new ObjectParameter("AC_Title", typeof(string));


        var dRParameter = dR.HasValue ?
            new ObjectParameter("DR", dR) :
            new ObjectParameter("DR", typeof(double));


        var cRParameter = cR.HasValue ?
            new ObjectParameter("CR", cR) :
            new ObjectParameter("CR", typeof(double));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_COA_D_Incomecode_Insert", cAC_CodeParameter, pType_IDParameter, zIDParameter, aC_CodeParameter, aC_TitleParameter, dRParameter, cRParameter, qtyParameter);
    }


    public virtual int sp_Item_COA_D_Incomecode_Update(Nullable<int> incomecode, string name)
    {

        var incomecodeParameter = incomecode.HasValue ?
            new ObjectParameter("Incomecode", incomecode) :
            new ObjectParameter("Incomecode", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_COA_D_Incomecode_Update", incomecodeParameter, nameParameter);
    }


    public virtual int sp_Item_COA_D_InventoryCode_Insert(Nullable<int> cAC_Code, Nullable<int> pType_ID, Nullable<int> zID, Nullable<int> aC_Code, string aC_Title, Nullable<double> dR, Nullable<double> cR, Nullable<double> qty)
    {

        var cAC_CodeParameter = cAC_Code.HasValue ?
            new ObjectParameter("CAC_Code", cAC_Code) :
            new ObjectParameter("CAC_Code", typeof(int));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_TitleParameter = aC_Title != null ?
            new ObjectParameter("AC_Title", aC_Title) :
            new ObjectParameter("AC_Title", typeof(string));


        var dRParameter = dR.HasValue ?
            new ObjectParameter("DR", dR) :
            new ObjectParameter("DR", typeof(double));


        var cRParameter = cR.HasValue ?
            new ObjectParameter("CR", cR) :
            new ObjectParameter("CR", typeof(double));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_COA_D_InventoryCode_Insert", cAC_CodeParameter, pType_IDParameter, zIDParameter, aC_CodeParameter, aC_TitleParameter, dRParameter, cRParameter, qtyParameter);
    }


    public virtual int sp_Item_COA_D_Inventorycode_Update(Nullable<int> inventorycode, string name)
    {

        var inventorycodeParameter = inventorycode.HasValue ?
            new ObjectParameter("Inventorycode", inventorycode) :
            new ObjectParameter("Inventorycode", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_COA_D_Inventorycode_Update", inventorycodeParameter, nameParameter);
    }


    public virtual int sp_Item_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_Delete", idParameter);
    }


    public virtual int sp_Item_Gl_Insert(Nullable<int> rID, Nullable<int> rID2, Nullable<int> typeCode, Nullable<System.DateTime> gLDate, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> oP_Price, Nullable<double> debit, Nullable<double> credit)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var rID2Parameter = rID2.HasValue ?
            new ObjectParameter("RID2", rID2) :
            new ObjectParameter("RID2", typeof(int));


        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var gLDateParameter = gLDate.HasValue ?
            new ObjectParameter("GLDate", gLDate) :
            new ObjectParameter("GLDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var oP_PriceParameter = oP_Price.HasValue ?
            new ObjectParameter("OP_Price", oP_Price) :
            new ObjectParameter("OP_Price", typeof(double));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_Gl_Insert", rIDParameter, rID2Parameter, typeCodeParameter, gLDateParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, oP_PriceParameter, debitParameter, creditParameter);
    }


    public virtual int sp_Item_Insert(string iName, string desc, Nullable<int> unit_ID, Nullable<bool> inv_YN, Nullable<int> compID, string barCode_ID, Nullable<int> sCatID, Nullable<int> cTN_PCK, Nullable<double> purPrice, Nullable<double> salesPrice, Nullable<double> retailPrice, Nullable<int> iCP, Nullable<int> oP_Qty, Nullable<int> oP_Price, Nullable<int> disContinue, Nullable<int> aC_Code_Inv, Nullable<int> aC_Code_Inc, Nullable<int> aC_Code_Cost)
    {

        var iNameParameter = iName != null ?
            new ObjectParameter("IName", iName) :
            new ObjectParameter("IName", typeof(string));


        var descParameter = desc != null ?
            new ObjectParameter("Desc", desc) :
            new ObjectParameter("Desc", typeof(string));


        var unit_IDParameter = unit_ID.HasValue ?
            new ObjectParameter("Unit_ID", unit_ID) :
            new ObjectParameter("Unit_ID", typeof(int));


        var inv_YNParameter = inv_YN.HasValue ?
            new ObjectParameter("Inv_YN", inv_YN) :
            new ObjectParameter("Inv_YN", typeof(bool));


        var compIDParameter = compID.HasValue ?
            new ObjectParameter("CompID", compID) :
            new ObjectParameter("CompID", typeof(int));


        var barCode_IDParameter = barCode_ID != null ?
            new ObjectParameter("BarCode_ID", barCode_ID) :
            new ObjectParameter("BarCode_ID", typeof(string));


        var sCatIDParameter = sCatID.HasValue ?
            new ObjectParameter("SCatID", sCatID) :
            new ObjectParameter("SCatID", typeof(int));


        var cTN_PCKParameter = cTN_PCK.HasValue ?
            new ObjectParameter("CTN_PCK", cTN_PCK) :
            new ObjectParameter("CTN_PCK", typeof(int));


        var purPriceParameter = purPrice.HasValue ?
            new ObjectParameter("PurPrice", purPrice) :
            new ObjectParameter("PurPrice", typeof(double));


        var salesPriceParameter = salesPrice.HasValue ?
            new ObjectParameter("SalesPrice", salesPrice) :
            new ObjectParameter("SalesPrice", typeof(double));


        var retailPriceParameter = retailPrice.HasValue ?
            new ObjectParameter("RetailPrice", retailPrice) :
            new ObjectParameter("RetailPrice", typeof(double));


        var iCPParameter = iCP.HasValue ?
            new ObjectParameter("ICP", iCP) :
            new ObjectParameter("ICP", typeof(int));


        var oP_QtyParameter = oP_Qty.HasValue ?
            new ObjectParameter("OP_Qty", oP_Qty) :
            new ObjectParameter("OP_Qty", typeof(int));


        var oP_PriceParameter = oP_Price.HasValue ?
            new ObjectParameter("OP_Price", oP_Price) :
            new ObjectParameter("OP_Price", typeof(int));


        var disContinueParameter = disContinue.HasValue ?
            new ObjectParameter("DisContinue", disContinue) :
            new ObjectParameter("DisContinue", typeof(int));


        var aC_Code_InvParameter = aC_Code_Inv.HasValue ?
            new ObjectParameter("AC_Code_Inv", aC_Code_Inv) :
            new ObjectParameter("AC_Code_Inv", typeof(int));


        var aC_Code_IncParameter = aC_Code_Inc.HasValue ?
            new ObjectParameter("AC_Code_Inc", aC_Code_Inc) :
            new ObjectParameter("AC_Code_Inc", typeof(int));


        var aC_Code_CostParameter = aC_Code_Cost.HasValue ?
            new ObjectParameter("AC_Code_Cost", aC_Code_Cost) :
            new ObjectParameter("AC_Code_Cost", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Item_Insert", iNameParameter, descParameter, unit_IDParameter, inv_YNParameter, compIDParameter, barCode_IDParameter, sCatIDParameter, cTN_PCKParameter, purPriceParameter, salesPriceParameter, retailPriceParameter, iCPParameter, oP_QtyParameter, oP_PriceParameter, disContinueParameter, aC_Code_InvParameter, aC_Code_IncParameter, aC_Code_CostParameter);
    }


    public virtual ObjectResult<SP_Items_Result> SP_Items(string param)
    {

        var paramParameter = param != null ?
            new ObjectParameter("Param", param) :
            new ObjectParameter("Param", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Items_Result>("SP_Items", paramParameter);
    }


    public virtual int sp_Items_Update(string name, string desc, Nullable<int> unit_ID, Nullable<bool> inv_YN, Nullable<int> compID, string barCode_ID, Nullable<int> sCatID, Nullable<int> cTN_PCK, Nullable<double> purPrice, Nullable<double> salesPrice, Nullable<double> retailPrice, Nullable<int> iCP, Nullable<int> oP_Qty, Nullable<int> oP_Price, Nullable<int> disContinue, Nullable<int> aC_Code_Inv, Nullable<int> aC_Code_Inc, Nullable<int> aC_Code_Cost)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var descParameter = desc != null ?
            new ObjectParameter("Desc", desc) :
            new ObjectParameter("Desc", typeof(string));


        var unit_IDParameter = unit_ID.HasValue ?
            new ObjectParameter("Unit_ID", unit_ID) :
            new ObjectParameter("Unit_ID", typeof(int));


        var inv_YNParameter = inv_YN.HasValue ?
            new ObjectParameter("Inv_YN", inv_YN) :
            new ObjectParameter("Inv_YN", typeof(bool));


        var compIDParameter = compID.HasValue ?
            new ObjectParameter("CompID", compID) :
            new ObjectParameter("CompID", typeof(int));


        var barCode_IDParameter = barCode_ID != null ?
            new ObjectParameter("BarCode_ID", barCode_ID) :
            new ObjectParameter("BarCode_ID", typeof(string));


        var sCatIDParameter = sCatID.HasValue ?
            new ObjectParameter("SCatID", sCatID) :
            new ObjectParameter("SCatID", typeof(int));


        var cTN_PCKParameter = cTN_PCK.HasValue ?
            new ObjectParameter("CTN_PCK", cTN_PCK) :
            new ObjectParameter("CTN_PCK", typeof(int));


        var purPriceParameter = purPrice.HasValue ?
            new ObjectParameter("PurPrice", purPrice) :
            new ObjectParameter("PurPrice", typeof(double));


        var salesPriceParameter = salesPrice.HasValue ?
            new ObjectParameter("SalesPrice", salesPrice) :
            new ObjectParameter("SalesPrice", typeof(double));


        var retailPriceParameter = retailPrice.HasValue ?
            new ObjectParameter("RetailPrice", retailPrice) :
            new ObjectParameter("RetailPrice", typeof(double));


        var iCPParameter = iCP.HasValue ?
            new ObjectParameter("ICP", iCP) :
            new ObjectParameter("ICP", typeof(int));


        var oP_QtyParameter = oP_Qty.HasValue ?
            new ObjectParameter("OP_Qty", oP_Qty) :
            new ObjectParameter("OP_Qty", typeof(int));


        var oP_PriceParameter = oP_Price.HasValue ?
            new ObjectParameter("OP_Price", oP_Price) :
            new ObjectParameter("OP_Price", typeof(int));


        var disContinueParameter = disContinue.HasValue ?
            new ObjectParameter("DisContinue", disContinue) :
            new ObjectParameter("DisContinue", typeof(int));


        var aC_Code_InvParameter = aC_Code_Inv.HasValue ?
            new ObjectParameter("AC_Code_Inv", aC_Code_Inv) :
            new ObjectParameter("AC_Code_Inv", typeof(int));


        var aC_Code_IncParameter = aC_Code_Inc.HasValue ?
            new ObjectParameter("AC_Code_Inc", aC_Code_Inc) :
            new ObjectParameter("AC_Code_Inc", typeof(int));


        var aC_Code_CostParameter = aC_Code_Cost.HasValue ?
            new ObjectParameter("AC_Code_Cost", aC_Code_Cost) :
            new ObjectParameter("AC_Code_Cost", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Items_Update", nameParameter, descParameter, unit_IDParameter, inv_YNParameter, compIDParameter, barCode_IDParameter, sCatIDParameter, cTN_PCKParameter, purPriceParameter, salesPriceParameter, retailPriceParameter, iCPParameter, oP_QtyParameter, oP_PriceParameter, disContinueParameter, aC_Code_InvParameter, aC_Code_IncParameter, aC_Code_CostParameter);
    }


    public virtual int sp_PartyType_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PartyType_Delete", idParameter);
    }


    public virtual int sp_PartyType_insert(string name)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PartyType_insert", nameParameter);
    }


    public virtual ObjectResult<Sp_partyType_Select_Result> Sp_partyType_Select(Nullable<int> pType_ID, string party_Type, Nullable<bool> isDeleted)
    {

        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var party_TypeParameter = party_Type != null ?
            new ObjectParameter("Party_Type", party_Type) :
            new ObjectParameter("Party_Type", typeof(string));


        var isDeletedParameter = isDeleted.HasValue ?
            new ObjectParameter("isDeleted", isDeleted) :
            new ObjectParameter("isDeleted", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_partyType_Select_Result>("Sp_partyType_Select", pType_IDParameter, party_TypeParameter, isDeletedParameter);
    }


    public virtual ObjectResult<sp_partyType_SelectById_Result> sp_partyType_SelectById(Nullable<int> pType_ID)
    {

        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partyType_SelectById_Result>("sp_partyType_SelectById", pType_IDParameter);
    }


    public virtual int sp_PartyType_Update(Nullable<int> id, string name)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PartyType_Update", idParameter, nameParameter);
    }


    public virtual int sp_PV_D_Insert(Nullable<int> rID, string narr, Nullable<int> mOP_ID, Nullable<int> aC_Code, Nullable<int> invNo, Nullable<int> chkNo, Nullable<int> slipNo, Nullable<double> preAmt, Nullable<double> amt, Nullable<double> disAmt, Nullable<double> balAmt, Nullable<double> sRT, Nullable<double> rCancel, Nullable<System.DateTime> checkDate)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var narrParameter = narr != null ?
            new ObjectParameter("Narr", narr) :
            new ObjectParameter("Narr", typeof(string));


        var mOP_IDParameter = mOP_ID.HasValue ?
            new ObjectParameter("MOP_ID", mOP_ID) :
            new ObjectParameter("MOP_ID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var invNoParameter = invNo.HasValue ?
            new ObjectParameter("InvNo", invNo) :
            new ObjectParameter("InvNo", typeof(int));


        var chkNoParameter = chkNo.HasValue ?
            new ObjectParameter("ChkNo", chkNo) :
            new ObjectParameter("ChkNo", typeof(int));


        var slipNoParameter = slipNo.HasValue ?
            new ObjectParameter("SlipNo", slipNo) :
            new ObjectParameter("SlipNo", typeof(int));


        var preAmtParameter = preAmt.HasValue ?
            new ObjectParameter("PreAmt", preAmt) :
            new ObjectParameter("PreAmt", typeof(double));


        var amtParameter = amt.HasValue ?
            new ObjectParameter("Amt", amt) :
            new ObjectParameter("Amt", typeof(double));


        var disAmtParameter = disAmt.HasValue ?
            new ObjectParameter("DisAmt", disAmt) :
            new ObjectParameter("DisAmt", typeof(double));


        var balAmtParameter = balAmt.HasValue ?
            new ObjectParameter("BalAmt", balAmt) :
            new ObjectParameter("BalAmt", typeof(double));


        var sRTParameter = sRT.HasValue ?
            new ObjectParameter("SRT", sRT) :
            new ObjectParameter("SRT", typeof(double));


        var rCancelParameter = rCancel.HasValue ?
            new ObjectParameter("RCancel", rCancel) :
            new ObjectParameter("RCancel", typeof(double));


        var checkDateParameter = checkDate.HasValue ?
            new ObjectParameter("checkDate", checkDate) :
            new ObjectParameter("checkDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_D_Insert", rIDParameter, narrParameter, mOP_IDParameter, aC_CodeParameter, invNoParameter, chkNoParameter, slipNoParameter, preAmtParameter, amtParameter, disAmtParameter, balAmtParameter, sRTParameter, rCancelParameter, checkDateParameter);
    }


    public virtual int sp_PV_D_Update(Nullable<int> rID, string narr, Nullable<int> mOP_ID, Nullable<int> aC_Code, Nullable<int> invNo, Nullable<int> chkNo, Nullable<int> slipNo, Nullable<double> preAmt, Nullable<double> amt, Nullable<double> disAmt, Nullable<double> balAmt, Nullable<double> sRT, Nullable<double> rCancel, Nullable<System.DateTime> checkDate)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var narrParameter = narr != null ?
            new ObjectParameter("Narr", narr) :
            new ObjectParameter("Narr", typeof(string));


        var mOP_IDParameter = mOP_ID.HasValue ?
            new ObjectParameter("MOP_ID", mOP_ID) :
            new ObjectParameter("MOP_ID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var invNoParameter = invNo.HasValue ?
            new ObjectParameter("InvNo", invNo) :
            new ObjectParameter("InvNo", typeof(int));


        var chkNoParameter = chkNo.HasValue ?
            new ObjectParameter("ChkNo", chkNo) :
            new ObjectParameter("ChkNo", typeof(int));


        var slipNoParameter = slipNo.HasValue ?
            new ObjectParameter("SlipNo", slipNo) :
            new ObjectParameter("SlipNo", typeof(int));


        var preAmtParameter = preAmt.HasValue ?
            new ObjectParameter("PreAmt", preAmt) :
            new ObjectParameter("PreAmt", typeof(double));


        var amtParameter = amt.HasValue ?
            new ObjectParameter("Amt", amt) :
            new ObjectParameter("Amt", typeof(double));


        var disAmtParameter = disAmt.HasValue ?
            new ObjectParameter("DisAmt", disAmt) :
            new ObjectParameter("DisAmt", typeof(double));


        var balAmtParameter = balAmt.HasValue ?
            new ObjectParameter("BalAmt", balAmt) :
            new ObjectParameter("BalAmt", typeof(double));


        var sRTParameter = sRT.HasValue ?
            new ObjectParameter("SRT", sRT) :
            new ObjectParameter("SRT", typeof(double));


        var rCancelParameter = rCancel.HasValue ?
            new ObjectParameter("RCancel", rCancel) :
            new ObjectParameter("RCancel", typeof(double));


        var checkDateParameter = checkDate.HasValue ?
            new ObjectParameter("checkDate", checkDate) :
            new ObjectParameter("checkDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_D_Update", rIDParameter, narrParameter, mOP_IDParameter, aC_CodeParameter, invNoParameter, chkNoParameter, slipNoParameter, preAmtParameter, amtParameter, disAmtParameter, balAmtParameter, sRTParameter, rCancelParameter, checkDateParameter);
    }


    public virtual int sp_PV_GL_credit(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gl, Nullable<int> mOP_ID)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var glParameter = gl.HasValue ?
            new ObjectParameter("gl", gl) :
            new ObjectParameter("gl", typeof(System.DateTime));


        var mOP_IDParameter = mOP_ID.HasValue ?
            new ObjectParameter("MOP_ID", mOP_ID) :
            new ObjectParameter("MOP_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_GL_credit", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, glParameter, mOP_IDParameter);
    }


    public virtual int sp_PV_Gl_Credit_Update(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gldate)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var gldateParameter = gldate.HasValue ?
            new ObjectParameter("gldate", gldate) :
            new ObjectParameter("gldate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_Gl_Credit_Update", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, gldateParameter);
    }


    public virtual int sp_PV_GL_Debit(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gl, Nullable<int> mOP_ID)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var glParameter = gl.HasValue ?
            new ObjectParameter("gl", gl) :
            new ObjectParameter("gl", typeof(System.DateTime));


        var mOP_IDParameter = mOP_ID.HasValue ?
            new ObjectParameter("MOP_ID", mOP_ID) :
            new ObjectParameter("MOP_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_GL_Debit", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, glParameter, mOP_IDParameter);
    }


    public virtual int sp_PV_Gl_Debit_Update(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gldate)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var gldateParameter = gldate.HasValue ?
            new ObjectParameter("gldate", gldate) :
            new ObjectParameter("gldate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_Gl_Debit_Update", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, gldateParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> sp_PV_M_Insert(Nullable<int> compID, Nullable<System.DateTime> eDate, Nullable<int> aC_Code, Nullable<int> sID, string rem)
    {

        var compIDParameter = compID.HasValue ?
            new ObjectParameter("CompID", compID) :
            new ObjectParameter("CompID", typeof(int));


        var eDateParameter = eDate.HasValue ?
            new ObjectParameter("EDate", eDate) :
            new ObjectParameter("EDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var sIDParameter = sID.HasValue ?
            new ObjectParameter("SID", sID) :
            new ObjectParameter("SID", typeof(int));


        var remParameter = rem != null ?
            new ObjectParameter("Rem", rem) :
            new ObjectParameter("Rem", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_PV_M_Insert", compIDParameter, eDateParameter, aC_CodeParameter, sIDParameter, remParameter);
    }


    public virtual int sp_PV_M_Update(Nullable<int> compID, Nullable<System.DateTime> eDate, Nullable<int> aC_Code, Nullable<int> sID, string rem, Nullable<int> id)
    {

        var compIDParameter = compID.HasValue ?
            new ObjectParameter("CompID", compID) :
            new ObjectParameter("CompID", typeof(int));


        var eDateParameter = eDate.HasValue ?
            new ObjectParameter("EDate", eDate) :
            new ObjectParameter("EDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var sIDParameter = sID.HasValue ?
            new ObjectParameter("SID", sID) :
            new ObjectParameter("SID", typeof(int));


        var remParameter = rem != null ?
            new ObjectParameter("Rem", rem) :
            new ObjectParameter("Rem", typeof(string));


        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PV_M_Update", compIDParameter, eDateParameter, aC_CodeParameter, sIDParameter, remParameter, idParameter);
    }


    public virtual int sp_RV_D_Insert(Nullable<int> rID, string narr, Nullable<int> mOP_ID, Nullable<int> aC_Code, Nullable<int> invNo, Nullable<int> chkNo, Nullable<int> slipNo, Nullable<double> preAmt, Nullable<double> amt, Nullable<double> disAmt, Nullable<double> balAmt, Nullable<double> sRT, Nullable<double> rCancel, Nullable<System.DateTime> checkDate)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var narrParameter = narr != null ?
            new ObjectParameter("Narr", narr) :
            new ObjectParameter("Narr", typeof(string));


        var mOP_IDParameter = mOP_ID.HasValue ?
            new ObjectParameter("MOP_ID", mOP_ID) :
            new ObjectParameter("MOP_ID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var invNoParameter = invNo.HasValue ?
            new ObjectParameter("InvNo", invNo) :
            new ObjectParameter("InvNo", typeof(int));


        var chkNoParameter = chkNo.HasValue ?
            new ObjectParameter("ChkNo", chkNo) :
            new ObjectParameter("ChkNo", typeof(int));


        var slipNoParameter = slipNo.HasValue ?
            new ObjectParameter("SlipNo", slipNo) :
            new ObjectParameter("SlipNo", typeof(int));


        var preAmtParameter = preAmt.HasValue ?
            new ObjectParameter("PreAmt", preAmt) :
            new ObjectParameter("PreAmt", typeof(double));


        var amtParameter = amt.HasValue ?
            new ObjectParameter("Amt", amt) :
            new ObjectParameter("Amt", typeof(double));


        var disAmtParameter = disAmt.HasValue ?
            new ObjectParameter("DisAmt", disAmt) :
            new ObjectParameter("DisAmt", typeof(double));


        var balAmtParameter = balAmt.HasValue ?
            new ObjectParameter("BalAmt", balAmt) :
            new ObjectParameter("BalAmt", typeof(double));


        var sRTParameter = sRT.HasValue ?
            new ObjectParameter("SRT", sRT) :
            new ObjectParameter("SRT", typeof(double));


        var rCancelParameter = rCancel.HasValue ?
            new ObjectParameter("RCancel", rCancel) :
            new ObjectParameter("RCancel", typeof(double));


        var checkDateParameter = checkDate.HasValue ?
            new ObjectParameter("checkDate", checkDate) :
            new ObjectParameter("checkDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_D_Insert", rIDParameter, narrParameter, mOP_IDParameter, aC_CodeParameter, invNoParameter, chkNoParameter, slipNoParameter, preAmtParameter, amtParameter, disAmtParameter, balAmtParameter, sRTParameter, rCancelParameter, checkDateParameter);
    }


    public virtual int sp_RV_D_Update(Nullable<int> rID, string narr, Nullable<int> mOP_ID, Nullable<int> aC_Code, Nullable<int> invNo, Nullable<int> chkNo, Nullable<int> slipNo, Nullable<double> preAmt, Nullable<double> amt, Nullable<double> disAmt, Nullable<double> balAmt, Nullable<double> sRT, Nullable<double> rCancel, Nullable<System.DateTime> checkDate)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var narrParameter = narr != null ?
            new ObjectParameter("Narr", narr) :
            new ObjectParameter("Narr", typeof(string));


        var mOP_IDParameter = mOP_ID.HasValue ?
            new ObjectParameter("MOP_ID", mOP_ID) :
            new ObjectParameter("MOP_ID", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var invNoParameter = invNo.HasValue ?
            new ObjectParameter("InvNo", invNo) :
            new ObjectParameter("InvNo", typeof(int));


        var chkNoParameter = chkNo.HasValue ?
            new ObjectParameter("ChkNo", chkNo) :
            new ObjectParameter("ChkNo", typeof(int));


        var slipNoParameter = slipNo.HasValue ?
            new ObjectParameter("SlipNo", slipNo) :
            new ObjectParameter("SlipNo", typeof(int));


        var preAmtParameter = preAmt.HasValue ?
            new ObjectParameter("PreAmt", preAmt) :
            new ObjectParameter("PreAmt", typeof(double));


        var amtParameter = amt.HasValue ?
            new ObjectParameter("Amt", amt) :
            new ObjectParameter("Amt", typeof(double));


        var disAmtParameter = disAmt.HasValue ?
            new ObjectParameter("DisAmt", disAmt) :
            new ObjectParameter("DisAmt", typeof(double));


        var balAmtParameter = balAmt.HasValue ?
            new ObjectParameter("BalAmt", balAmt) :
            new ObjectParameter("BalAmt", typeof(double));


        var sRTParameter = sRT.HasValue ?
            new ObjectParameter("SRT", sRT) :
            new ObjectParameter("SRT", typeof(double));


        var rCancelParameter = rCancel.HasValue ?
            new ObjectParameter("RCancel", rCancel) :
            new ObjectParameter("RCancel", typeof(double));


        var checkDateParameter = checkDate.HasValue ?
            new ObjectParameter("checkDate", checkDate) :
            new ObjectParameter("checkDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_D_Update", rIDParameter, narrParameter, mOP_IDParameter, aC_CodeParameter, invNoParameter, chkNoParameter, slipNoParameter, preAmtParameter, amtParameter, disAmtParameter, balAmtParameter, sRTParameter, rCancelParameter, checkDateParameter);
    }


    public virtual int sp_RV_GL_credit(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gl)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var glParameter = gl.HasValue ?
            new ObjectParameter("gl", gl) :
            new ObjectParameter("gl", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_GL_credit", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, glParameter);
    }


    public virtual int sp_RV_Gl_Credit_Update(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gldate)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var gldateParameter = gldate.HasValue ?
            new ObjectParameter("gldate", gldate) :
            new ObjectParameter("gldate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_Gl_Credit_Update", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, gldateParameter);
    }


    public virtual int sp_RV_GL_Debit(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gl)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var glParameter = gl.HasValue ?
            new ObjectParameter("gl", gl) :
            new ObjectParameter("gl", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_GL_Debit", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, glParameter);
    }


    public virtual int sp_RV_Gl_Debit_Update(Nullable<int> typeCode, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit, Nullable<int> rID, Nullable<System.DateTime> gldate)
    {

        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var gldateParameter = gldate.HasValue ?
            new ObjectParameter("gldate", gldate) :
            new ObjectParameter("gldate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_Gl_Debit_Update", typeCodeParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter, rIDParameter, gldateParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> sp_RV_M_Insert(Nullable<int> compID, Nullable<System.DateTime> eDate, Nullable<int> aC_Code, Nullable<int> sID, string rem)
    {

        var compIDParameter = compID.HasValue ?
            new ObjectParameter("CompID", compID) :
            new ObjectParameter("CompID", typeof(int));


        var eDateParameter = eDate.HasValue ?
            new ObjectParameter("EDate", eDate) :
            new ObjectParameter("EDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var sIDParameter = sID.HasValue ?
            new ObjectParameter("SID", sID) :
            new ObjectParameter("SID", typeof(int));


        var remParameter = rem != null ?
            new ObjectParameter("Rem", rem) :
            new ObjectParameter("Rem", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_RV_M_Insert", compIDParameter, eDateParameter, aC_CodeParameter, sIDParameter, remParameter);
    }


    public virtual int sp_RV_M_Update(Nullable<int> compID, Nullable<System.DateTime> eDate, Nullable<int> aC_Code, Nullable<int> sID, string rem, Nullable<int> id)
    {

        var compIDParameter = compID.HasValue ?
            new ObjectParameter("CompID", compID) :
            new ObjectParameter("CompID", typeof(int));


        var eDateParameter = eDate.HasValue ?
            new ObjectParameter("EDate", eDate) :
            new ObjectParameter("EDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var sIDParameter = sID.HasValue ?
            new ObjectParameter("SID", sID) :
            new ObjectParameter("SID", typeof(int));


        var remParameter = rem != null ?
            new ObjectParameter("Rem", rem) :
            new ObjectParameter("Rem", typeof(string));


        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RV_M_Update", compIDParameter, eDateParameter, aC_CodeParameter, sIDParameter, remParameter, idParameter);
    }


    public virtual int sp_Unit_delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Unit_delete", idParameter);
    }


    public virtual int sp_unit_insert(string name)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_unit_insert", nameParameter);
    }


    public virtual ObjectResult<sp_unit_select_Result> sp_unit_select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_unit_select_Result>("sp_unit_select");
    }


    public virtual ObjectResult<sp_unit_selectById_Result> sp_unit_selectById(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_unit_selectById_Result>("sp_unit_selectById", idParameter);
    }


    public virtual int sp_unit_Update(Nullable<int> id, string name)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_unit_Update", idParameter, nameParameter);
    }


    public virtual int sp_vendor_coa_d_update(string name, Nullable<int> aC_Code)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_coa_d_update", nameParameter, aC_CodeParameter);
    }


    public virtual int sp_vendor_delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_delete", idParameter);
    }


    public virtual int sp_Vendor_Gl_insert(Nullable<int> rID, Nullable<int> rID2, Nullable<int> typeCode, Nullable<System.DateTime> gLDate, Nullable<int> aC_Code, Nullable<int> aC_Code2, string narration, Nullable<double> debit, Nullable<double> credit)
    {

        var rIDParameter = rID.HasValue ?
            new ObjectParameter("RID", rID) :
            new ObjectParameter("RID", typeof(int));


        var rID2Parameter = rID2.HasValue ?
            new ObjectParameter("RID2", rID2) :
            new ObjectParameter("RID2", typeof(int));


        var typeCodeParameter = typeCode.HasValue ?
            new ObjectParameter("TypeCode", typeCode) :
            new ObjectParameter("TypeCode", typeof(int));


        var gLDateParameter = gLDate.HasValue ?
            new ObjectParameter("GLDate", gLDate) :
            new ObjectParameter("GLDate", typeof(System.DateTime));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var aC_Code2Parameter = aC_Code2.HasValue ?
            new ObjectParameter("AC_Code2", aC_Code2) :
            new ObjectParameter("AC_Code2", typeof(int));


        var narrationParameter = narration != null ?
            new ObjectParameter("Narration", narration) :
            new ObjectParameter("Narration", typeof(string));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vendor_Gl_insert", rIDParameter, rID2Parameter, typeCodeParameter, gLDateParameter, aC_CodeParameter, aC_Code2Parameter, narrationParameter, debitParameter, creditParameter);
    }


    public virtual int sp_vendor_gl_update(Nullable<double> debit, Nullable<double> credit, Nullable<int> aC_Code)
    {

        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_gl_update", debitParameter, creditParameter, aC_CodeParameter);
    }


    public virtual int sp_vendor_Gl_Update_capital(Nullable<double> debit, Nullable<double> credit, Nullable<int> aC_Code)
    {

        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_Gl_Update_capital", debitParameter, creditParameter, aC_CodeParameter);
    }


    public virtual int sp_vendor_insert(Nullable<int> aC_Code, string cusName, Nullable<int> pType_ID, string add, string nTN_No, string contactPerson, string cell, string eml, string tel, Nullable<int> zID, Nullable<double> debit, Nullable<double> credit, Nullable<bool> inActive, string land, Nullable<int> city, Nullable<int> village)
    {

        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var cusNameParameter = cusName != null ?
            new ObjectParameter("CusName", cusName) :
            new ObjectParameter("CusName", typeof(string));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var addParameter = add != null ?
            new ObjectParameter("Add", add) :
            new ObjectParameter("Add", typeof(string));


        var nTN_NoParameter = nTN_No != null ?
            new ObjectParameter("NTN_No", nTN_No) :
            new ObjectParameter("NTN_No", typeof(string));


        var contactPersonParameter = contactPerson != null ?
            new ObjectParameter("ContactPerson", contactPerson) :
            new ObjectParameter("ContactPerson", typeof(string));


        var cellParameter = cell != null ?
            new ObjectParameter("Cell", cell) :
            new ObjectParameter("Cell", typeof(string));


        var emlParameter = eml != null ?
            new ObjectParameter("Eml", eml) :
            new ObjectParameter("Eml", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var inActiveParameter = inActive.HasValue ?
            new ObjectParameter("InActive", inActive) :
            new ObjectParameter("InActive", typeof(bool));


        var landParameter = land != null ?
            new ObjectParameter("Land", land) :
            new ObjectParameter("Land", typeof(string));


        var cityParameter = city.HasValue ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(int));


        var villageParameter = village.HasValue ?
            new ObjectParameter("Village", village) :
            new ObjectParameter("Village", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_insert", aC_CodeParameter, cusNameParameter, pType_IDParameter, addParameter, nTN_NoParameter, contactPersonParameter, cellParameter, emlParameter, telParameter, zIDParameter, debitParameter, creditParameter, inActiveParameter, landParameter, cityParameter, villageParameter);
    }


    public virtual ObjectResult<sp_vendor_selectById_Result> sp_vendor_selectById(Nullable<int> vendorID)
    {

        var vendorIDParameter = vendorID.HasValue ?
            new ObjectParameter("vendorID", vendorID) :
            new ObjectParameter("vendorID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vendor_selectById_Result>("sp_vendor_selectById", vendorIDParameter);
    }


    public virtual int sp_vendor_update(Nullable<int> aC_Code, string cusName, Nullable<int> pType_ID, string add, string nTN_No, string contactPerson, string cell, string eml, string tel, Nullable<int> zID, Nullable<double> debit, Nullable<double> credit, Nullable<bool> inActive, string land, Nullable<int> city, Nullable<int> village)
    {

        var aC_CodeParameter = aC_Code.HasValue ?
            new ObjectParameter("AC_Code", aC_Code) :
            new ObjectParameter("AC_Code", typeof(int));


        var cusNameParameter = cusName != null ?
            new ObjectParameter("CusName", cusName) :
            new ObjectParameter("CusName", typeof(string));


        var pType_IDParameter = pType_ID.HasValue ?
            new ObjectParameter("PType_ID", pType_ID) :
            new ObjectParameter("PType_ID", typeof(int));


        var addParameter = add != null ?
            new ObjectParameter("Add", add) :
            new ObjectParameter("Add", typeof(string));


        var nTN_NoParameter = nTN_No != null ?
            new ObjectParameter("NTN_No", nTN_No) :
            new ObjectParameter("NTN_No", typeof(string));


        var contactPersonParameter = contactPerson != null ?
            new ObjectParameter("ContactPerson", contactPerson) :
            new ObjectParameter("ContactPerson", typeof(string));


        var cellParameter = cell != null ?
            new ObjectParameter("Cell", cell) :
            new ObjectParameter("Cell", typeof(string));


        var emlParameter = eml != null ?
            new ObjectParameter("Eml", eml) :
            new ObjectParameter("Eml", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var zIDParameter = zID.HasValue ?
            new ObjectParameter("ZID", zID) :
            new ObjectParameter("ZID", typeof(int));


        var debitParameter = debit.HasValue ?
            new ObjectParameter("Debit", debit) :
            new ObjectParameter("Debit", typeof(double));


        var creditParameter = credit.HasValue ?
            new ObjectParameter("Credit", credit) :
            new ObjectParameter("Credit", typeof(double));


        var inActiveParameter = inActive.HasValue ?
            new ObjectParameter("InActive", inActive) :
            new ObjectParameter("InActive", typeof(bool));


        var landParameter = land != null ?
            new ObjectParameter("Land", land) :
            new ObjectParameter("Land", typeof(string));


        var cityParameter = city.HasValue ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(int));


        var villageParameter = village.HasValue ?
            new ObjectParameter("Village", village) :
            new ObjectParameter("Village", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_update", aC_CodeParameter, cusNameParameter, pType_IDParameter, addParameter, nTN_NoParameter, contactPersonParameter, cellParameter, emlParameter, telParameter, zIDParameter, debitParameter, creditParameter, inActiveParameter, landParameter, cityParameter, villageParameter);
    }


    public virtual int sp_Village_Delete(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Village_Delete", idParameter);
    }


    public virtual int sp_Village_Insert(Nullable<int> cityID, string villageName, Nullable<bool> isDeleted)
    {

        var cityIDParameter = cityID.HasValue ?
            new ObjectParameter("CityID", cityID) :
            new ObjectParameter("CityID", typeof(int));


        var villageNameParameter = villageName != null ?
            new ObjectParameter("VillageName", villageName) :
            new ObjectParameter("VillageName", typeof(string));


        var isDeletedParameter = isDeleted.HasValue ?
            new ObjectParameter("IsDeleted", isDeleted) :
            new ObjectParameter("IsDeleted", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Village_Insert", cityIDParameter, villageNameParameter, isDeletedParameter);
    }


    public virtual ObjectResult<sp_Village_SelectByID_Result> sp_Village_SelectByID(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Village_SelectByID_Result>("sp_Village_SelectByID", iDParameter);
    }


    public virtual int sp_village_Update(Nullable<int> city, string villageNAme, Nullable<int> iD)
    {

        var cityParameter = city.HasValue ?
            new ObjectParameter("City", city) :
            new ObjectParameter("City", typeof(int));


        var villageNAmeParameter = villageNAme != null ?
            new ObjectParameter("VillageNAme", villageNAme) :
            new ObjectParameter("VillageNAme", typeof(string));


        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_village_Update", cityParameter, villageNAmeParameter, iDParameter);
    }


    public virtual int Update_EV(Nullable<int> rid, Nullable<System.DateTime> eDate, Nullable<double> ac_code, string customerCode, Nullable<double> amount, string checkNO, string narr)
    {

        var ridParameter = rid.HasValue ?
            new ObjectParameter("Rid", rid) :
            new ObjectParameter("Rid", typeof(int));


        var eDateParameter = eDate.HasValue ?
            new ObjectParameter("EDate", eDate) :
            new ObjectParameter("EDate", typeof(System.DateTime));


        var ac_codeParameter = ac_code.HasValue ?
            new ObjectParameter("Ac_code", ac_code) :
            new ObjectParameter("Ac_code", typeof(double));


        var customerCodeParameter = customerCode != null ?
            new ObjectParameter("CustomerCode", customerCode) :
            new ObjectParameter("CustomerCode", typeof(string));


        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(double));


        var checkNOParameter = checkNO != null ?
            new ObjectParameter("checkNO", checkNO) :
            new ObjectParameter("checkNO", typeof(string));


        var narrParameter = narr != null ?
            new ObjectParameter("Narr", narr) :
            new ObjectParameter("Narr", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_EV", ridParameter, eDateParameter, ac_codeParameter, customerCodeParameter, amountParameter, checkNOParameter, narrParameter);
    }


    public virtual int UpdateItemTable(string name, string catertoryId, string unitID, Nullable<int> itemID, string inventorycode, string incomecode, string costOfSale)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var catertoryIdParameter = catertoryId != null ?
            new ObjectParameter("CatertoryId", catertoryId) :
            new ObjectParameter("CatertoryId", typeof(string));


        var unitIDParameter = unitID != null ?
            new ObjectParameter("UnitID", unitID) :
            new ObjectParameter("UnitID", typeof(string));


        var itemIDParameter = itemID.HasValue ?
            new ObjectParameter("ItemID", itemID) :
            new ObjectParameter("ItemID", typeof(int));


        var inventorycodeParameter = inventorycode != null ?
            new ObjectParameter("Inventorycode", inventorycode) :
            new ObjectParameter("Inventorycode", typeof(string));


        var incomecodeParameter = incomecode != null ?
            new ObjectParameter("Incomecode", incomecode) :
            new ObjectParameter("Incomecode", typeof(string));


        var costOfSaleParameter = costOfSale != null ?
            new ObjectParameter("CostOfSale", costOfSale) :
            new ObjectParameter("CostOfSale", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateItemTable", nameParameter, catertoryIdParameter, unitIDParameter, itemIDParameter, inventorycodeParameter, incomecodeParameter, costOfSaleParameter);
    }


    public virtual ObjectResult<Vendor_Select_Result> Vendor_Select(Nullable<int> vendorID)
    {

        var vendorIDParameter = vendorID.HasValue ?
            new ObjectParameter("vendorID", vendorID) :
            new ObjectParameter("vendorID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor_Select_Result>("Vendor_Select", vendorIDParameter);
    }


    public virtual ObjectResult<Village_Select_Result> Village_Select()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Village_Select_Result>("Village_Select");
    }

}

}

